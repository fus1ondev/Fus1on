---
import type { MarkdownInstance } from 'astro';
import Badges from '@components/Badges.astro';
import Dates from '@components/Dates.astro';
import { getOptimizedImageSrc } from '@utils/getOptimizedImageSrc';

export interface Props {
	post: MarkdownInstance<Record<string, any>>;
  showDates: boolean;
}

const { post, showDates } = Astro.props as Props;

const thumbnailSrc = post.frontmatter.thumbnail ? await getOptimizedImageSrc(post.url!, post.frontmatter.thumbnail, 1000, 1000) : '';
---
<div class="box">
  <div class="thumbnail">
    <img class="img" src={thumbnailSrc}/>
  </div>
  <div class="container">
    <h2>{post.frontmatter.title}</h2>
    <div class="meta">
      {showDates && <Dates post={post} />}
      <!--{post.frontmatter.badges && <Badges badgeIds={post.frontmatter.badges} />}-->
      {post.frontmatter.draft && <span class="draft">(Draft)</span>}
    </div>
  </div>
  <a href={post.url} class="link" />
</div>
<style lang="scss">
  .box {
    width: 100%;
    background-color: var(--bg-secondary);
    border-radius: 12px;
    box-sizing: border-box;
    overflow: hidden;
    position: relative;
    display: flex;
    flex-direction: column;

    .link {
      display: block;
      width: 100%;
      height: 100%;
      position: absolute;
      top: 0;
      left: 0;
    }

    .thumbnail {
      position: relative;
      width: 100%;
      padding-top: 60%;
      overflow: hidden;

      .img {
        width: 100%;
        height: 100%;
        position: absolute;
        top: 0;
        object-fit: cover;
      }
    }
    
    .container {
      width: 100%;
      height: 100%;
      padding: 20px;
      display: flex;
      flex-direction: column;
      gap: 16px;

      h2 {
        margin: 0;
        font-size: 22px;
      }

      .meta {
        display: flex;
        align-items: center;
        margin-top: auto;
        gap: 8px;
      }
    }

    .draft {
      color: var(--text-secondary);
      font-size: 14px;
    }
  }
</style>
